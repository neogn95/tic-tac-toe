services:
  postgres:
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all
    container_name: postgres
    env_file:
      - .env
    expose:
      - "8080"
      - "5432"
    image: postgres:12.2-alpine
    ports:
      - "5432:5432"
      - "8080:8080"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "nakama"]
      interval: 3s
      timeout: 3s
      retries: 5
    volumes:
      - data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  nakama:
    build: .
    container_name: nakama
    depends_on:
      - postgres
    entrypoint:
      - "/bin/sh"
      - "-ecx"
      - "/nakama/nakama migrate up --database.address 'postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable' && exec /nakama/nakama --config /nakama/data/cloud.yml --database.address 'postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable'"
    expose:
      - "7349"
      - "7350"
      - "7351"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7350/"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "7349:7349"
      - "7350:7350"
      - "7351:7351"
    restart: unless-stopped

  nginx:
    image: jonasal/nginx-certbot:latest
    container_name: nginx
    environment:
      CERTBOT_EMAIL: "${USER_EMAIL}"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx_secrets:/etc/letsencrypt
      - ./nginx_conf.d:/etc/nginx/user_conf.d
    links:
      - nakama
    depends_on:
      - nakama

volumes:
  nginx_secrets: {}
  data:
